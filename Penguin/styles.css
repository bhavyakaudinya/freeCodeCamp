:root{
    /* here we creating a new custom variable because .face and .chin elements have the same background-color... */
    --penguin-face: white;
    --penguin-picorna: orange;
    --penguin-skin: gray;
}

body{
    background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100vh;
    
    /* Removing both the horizontal and vertical scrollbars using 👇🏻 */
    overflow: hidden;
}

.left-mountain{
    width: 300px;
    height: 300px;
    background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
    position: absolute;
    /* Skew transformation function is used to distort an element by tilting it along the horizontal and vertiacal axis.. */
    transform: skew(0deg, 44deg);
    /* setting it like as this comes directly under the .ground element  */
    z-index: 2;
    margin-top: 100px;
}

.back-mountain{
    width: 300px;
    height: 300px;
    background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
    /* to prevent it from taking up space in the page layout */
    position: absolute;
    z-index: 1;
    /* by default tranform property rotate element in clockwise direction */
    transform: rotate(45deg);
    left: 110px;
    top: 225px;
}

.sun{
    width: 200px;
    height: 200px;
    background-color: yellow;
    /* again to prevent from taking */
    position: absolute;
    border-radius: 50%;
    /* Positioning the sun in such a way that the top right corner of the screen such that 75px pf its top and right edges are off screen!! */
    right: -75px;
    top: -75px;
}

.penguin{
    width: 300px;
    height: 300px;
    margin: 0 auto;
    margin-top: 75px;
    /* Setting it up as it appears in front of the [.ground] element!! */
    z-index: 4;
    position: relative;
}

.penguin-head{
    /* setting this exactly half of it's parent!!! */
    width: 50%;
    height: 45%;
    background: linear-gradient(45deg, var(--penguin-skin), rgb(239, 240, 228));

    /* border-radius: top-left top-right bottom-right bottom-left; */
    border-radius: 70% 70% 65% 65%;

    /* instead of writing code as given below try writing as it is depicted above!! */
    /* border-top-left-radius: 70%;
    border-top-right-radius: 70%;
    border-bottom-left-radius: 65%;
    border-bottom-right-radius: 65%; */

    top: 10%;
    left: 25%;
    /* it's value has been set to 1 because we need our penguin head to appear before the penguin-body element!! */
    z-index: 1;
}

.face{
    width: 60%;
    height: 70%;
    background-color: var(--penguin-face);
    border-radius: 70% 70% 60% 60%;
    /* position: absolute; */
    top: 15%;
}

/* here we've targeted the face element with left class */
.face.left{
    left: 5%;
}

.face.right{
    right: 5%;
}

.chin{
    width: 90%;
    height: 70%;
    background-color: var(--penguin-face);
    top: 25%;
    left: 5%;
    border-radius: 70% 70% 100% 100%;
}

.eye{
    width: 15%;
    height: 17%;
    background-color: black;
    top: 45%;
    border-radius: 50%;
}

/* this is will position the element 25% left from its parent */
.eye.left{
    left: 25%;
}

.eye-lid{
    width: 150%;
    height: 100%;
    background-color: var(--penguin-face);
    top: 25%;
    left: -23%;
    border-radius: 50%;
}

/* this will positioned the element 25% right from its parent  */
.eye.right{
    right: 25%;
}

.blush{
    width: 15%;
    height: 10%;
    background-color: pink;
    top: 65%;
    border-radius: 50%;
}

.blush.left{
    left: 15%;
}

.blush.right{
    right: 15%;
}

.beak{
    height: 10%;
    background-color: var(--penguin-picorna);
    border-radius: 50%;
}

.beak.top{
    width: 20%;
    top: 60%;
    left: 40%;
}

.beak.bottom{
    width: 16%;
    /* we have to insert a vlaue that is 5% further than that of .beak.top */
    top: 65%;
    /* we have to insert such value that is 2% further than that of the .beak.top */
    left: 42%;
}

.shirt{
    /* we can use font property to specify all the various font-related properties for a single element in a single declarations.  */
    /* font: bold 25px Helvetica, sans-serif; */
    font-size: 25px;
    font-family: Helvetica, sans-serif;
    font-weight: bold;
    top: 165px;
    left: 127.5px;
    /* increasing the stack so that it appears before the .penguin-body */
    z-index: 1;
    color: #6a6969;
}

.shirt > div{
    /* we can either use Normal or Initial in this case to revert back to its original position */
    font-weight: normal;
    /* font-weight: initial; */
    top: 22.5px;
    left: 12px;
}

.penguin-body{
    width: 53%;
    height: 45%;
    background: linear-gradient(45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67%);
    /* border-radius: top-left top-right bottom-right bottom-left; */
    /* 👆🏻👇🏻 */
    border-radius: 80% 80% 100% 100%;
    top: 40%;
    left: 23.5%;
}

/* To give the penguin body a crest, we are creating a pseudo-element that is the first child of the .penguin-body element. Set the content property of the pseudo-element to an empty string. */
.penguin-body::before{
    content: "";

    /* We've positioned this element relative to it's closest positioned ancestors.*/
    position: absolute;

    /* 👇🏻 setting width equal to the half of its parent */
    width: 50%;
    height: 45%;
    background-color: var(--penguin-skin);
    top: 10%;
    left: 25%;

    /* border-radius: <top-left> <top-right> <bottom-right> <bottom-left>; */
    /* here we have give the bottom-corners a 100% value and top-corners 0% value, rounding-off the bottom corners */
    border-radius: 0% 0% 100% 100%;

    /* this is used to set the transparancy of an element */
    opacity: 70%;
}

.arm{
    width: 30%;
    height: 60%;
    /* the default direction for using a linear gradient function is in COLOCKWISE direction */
    background: linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199));
}

.arm.left{
    top: 35%;
    left: 5%;
}

.arm.right{
    top: 0%;
    right: -5%;
}

.foot{
    width: 15%;
    height: 30%;
    background-color: var(--penguin-picorna);
    top: 85%;
    border-radius: 50%;
    /* changing the stacking of .foot elements such that it appears beneath the .penguin-body */
    z-index: -1;
}

.foot.left{
    left: 25%;
    /* this will rotate the left foot 80 degrees in the anti-clockwise direction */
    transform: rotate(80deg);
}

.foot.right{
    right: 25%;
    /* this will rotate the right foot by 80 degrees in clockwise direction */
    transform: rotate(-80deg);
}

/* 👇🏻 for Targeting all descendent elements of the [.penguin] element */
.penguin *{
    position: absolute;
}

.ground{
    /* to take up the full width of the viewport!! */
    width: 100vw;
    height: 400px;
    background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));

    /* this will gonna stack upon top of the elements having lower Z-index!! */
    z-index: 3;
    position: absolute;
    margin-top: -58px;
}



