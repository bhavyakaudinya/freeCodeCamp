*{
    /* this is used because, by default the browser includes the border and padding when determining an element's size, to solve this, we reset the box model by using box-sizing property to an global a */
    box-sizing: border-box;
}

html{
    font-size: 16px;
}

body{
    font-family: "Open Sans", sans-serif;
}

.label{
    border: 2px solid black;
    width: 270px;
    /*👇🏻 the first value is always given as the [Vertically (top/bottom)] value and 
    the second value given as the [horizontal(left/right)] value */
    margin: 20px auto;
    padding: 0 7px;
}

header h1{
    text-align: center;
    margin: -4px 0;
    /* 👇🏻 this property can be used to adjust the space b/w each character of text in an element */
    letter-spacing: 0.15px;
}

.divider{
    border-bottom: 1px solid #888989;
    margin: 2px 0;
}

p{
    margin: 0;
    /* 👇🏻 we can add horizontal spacing using flex */
    display: flex;
    justify-content: space-between;
}

.bold{
    /* 👇🏻this property makes the h1 text bolder */
    font-weight: 800;
}

.large{
    height: 10px;
}

.large, .medium{
    background-color: black;
    border: 0;
}

.medium{
    height: 5px;
}

.small-text{
    font-size: 0.85rem;
}

.calories-info{
    display: flex;
    /* 👇🏻 here all the available space is inserted between the first and last items, pushing them to the container's opposing ends */
    justify-content:space-between;
    /* 👇🏻need to review the defination of flex-end! */
    align-items: flex-end;
}

.calories-info h2{
    margin: 0;
}

.calories-info span{
    font-size: 2.4em;
    font-weight: 700;
    margin: -7px -2px;
}

.left-container p{
    margin: -5px -2px;
    font-size: 2em;
    font-weight: 700;
}

.right{
    justify-content: flex-end;
}

.indent{
    margin-left: 1em;
}

.daily-value p:not(.no-divider){
    border-bottom: 1px solid #888989;
}