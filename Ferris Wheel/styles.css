.wheel{
    border: 2px solid black;
    border-radius: 50%;
    margin-left: 50px;
    position: absolute;
    height: 55vw;
    width: 55vw;
    max-width: 500px;
    max-height: 500px;
    /* 👇🏻 this property is used to link @keyframes to the CSS selector */
    animation-name: wheel;
    /* 👇🏻 this property is used to set how the animation should sequence to complete */
    animation-duration: 10s;
    /* 👇🏻 this property sets how many times your animation should repeat */
    animation-iteration-count: infinite;
    /* 👇🏻 this property sets how the animations should progress over time */
    /* here we want the animation to runa t the same rate from the start to finish i.e why we choose LINEAR!! */
    animation-timing-function: linear;
}

.line{
    background-color: black;
    width: 50%;
    height: 2px;
    position: absolute;
    left: 50%;
    top: 50%;

    /* the transform-origin determines around which point the element is rotated. */
    /* 👇🏻 this will offset the origin point by 0% from the left and 0% from the top, setting it to the top left corner of the element */
    transform-origin: 0% 0%;
}

/* for target the 2nd element of .line element */
.line:nth-of-type(2){
    /* Remember that the transform property allows you to manipulate the shape of an element. In this case, using the rotate(60deg) value will rotate the element around its transform-origin point by 60 degrees clockwise. */
    transform: rotate(60deg);
}

.line:nth-of-type(3){
    transform: rotate(120deg);
}

.line:nth-of-type(4){
    transform: rotate(180deg);
}

.line:nth-of-type(5){
    transform: rotate(240deg);
}

.line:nth-of-type(6){
    transform: rotate(300deg);
}

.cabin{
    background-color: red;
    width: 20%;
    height: 20%;
    position: absolute;
    border: 2px solid;
    /* this will set the origin point to be offset 50% from the left and 0% from the top */
    transform-origin: 50% 0%;
    /* this will set the animation-name, animation-duration, animation-timing-function, and animation-iteration-count properties in that order. */
    /* we can use the [animation[ property to set these all at once!! */
    animation: cabins 10s ease-in-out infinite;
    /* 👆🏻 to make your cabin animation seem more like a natural swinging motion, i.e we use [ease-in-out] timing function, this setting will tell the animation to start and end at a slower pace, but move more quickly in the middle of the cycle!! */
}

.cabin:nth-of-type(1){
    right: -8.5%;
    top: 50%;
}

.cabin:nth-of-type(2){
    right: 17%;
    top: 93.5%;
}

.cabin:nth-of-type(3){
    right: 67%;
    top: 93.5%;
}

.cabin:nth-of-type(4){
    left: -8.5%;
    top: 50%;
}

.cabin:nth-of-type(5){
    left: 17%;
    top: 7%;
}

.cabin:nth-of-type(6){
    right: 17%;
    top: 7%;
}

/* Once you have defined the `@keyframes` rule, you can apply the animation to an element using the `animation` property or shorthand `animation` property. */
@keyframes wheel{
    /* this will start with no rotation!! */
    0%{
        transform: rotate(0deg);
    }

    100%{
        transform: rotate(360deg);
    }
}

@keyframes cabins{
    0%{
        transform: rotate(0deg);
    }

    25%{
        background-color: yellow;
    }

    50%{
        background-color: purple;
    }

    75%{
        background-color: yellow;
    }

    100%{
        transform: rotate(-360deg);
    }
}
