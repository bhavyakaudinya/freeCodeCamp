/* variables are often declared in the :root selector. This is the highest level selector in CSS; putting your variables there will make them usable everywhere */
:root{
    --building-color1: #aa80ff;
    --building-color2: #66cc99;
    --building-color3: #cc6699;
    --building-color4: #538cc6;
    --window-color1: black;
    --window-color2: #8cd9b3;
}

*{
    /* 👇🏻 This is a trick that helps visualize where elements are and their size. */
    border: 1px solid black;
    box-sizing: border-box;
}

body{
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

.background-buildings, .foreground-buildings{
    display: flex;
    justify-content: space-evenly;
    align-items: flex-end;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
}

.bb1{
    width: 10%;
    height: 70%;

    display: flex;
    flex-direction: column;
    /* 👆🏻   property that is used in conjunction with flexbox layout. It specifies the direction in which flex items are arranged within a flex container.*/
    /*  the flex items are stacked vertically from top to bottom inside the container. In other words, the main axis of the flex container runs vertically, and the cross axis runs horizontally. This is different from the default behavior of flex containers, which is "flex-direction: row;" where the flex items are arranged horizontally from left to right. */

    align-items: center;

    /* 👇🏻 Variable declarations begin with two dashes (-) and are given a name and a value like this: --variable-name: value; */
    /* 👇🏻 the main advantage of using variables, being able to quickly change many values in your stylesheet by just changing the value of a variable. */
    
}

.bb1a{
    width: 70%;
}

.bb1b{
    width: 80%;
}

.bb1c{
    width: 90%;
}

/* BACKGROUND BUILDINGS - "bb" stands for "background building" */
.bb1d{
    width: 100%;
    height: 70%;

    /* 👇🏻 To use a variable, put the variable name in parentheses with var in front of them like this: var(--variable-name). Whatever value you gave the variable will be applied to whatever property you use it on. */
    /* 👇🏻 use precentage along with gradient values to see more transitions */
    /* 👇🏻 here it will transition 0 to 50% from color1 to color2 and the rest... */
    background: linear-gradient(var(--building-color1) 50%, var(--window-color1));
}

.bb1-window{
    height: 10%;

    /* 👇🏻 Using Gradient Function  */
    /* Note to self: Use var() function for giving or assigning self-declared values to attributes... */
    background: linear-gradient(var(--building-color1), var(--window-color1));
}

.bb2{
    width: 10%;
    height: 50%;

    /* 👇🏻 ou should add a **fallback value** to a variable by putting it as the second value of where you use the variable like this: var(--variable-name, fallback-value). The property will use the fallback value when there's a problem with the variable */
    background-color: var(--building-color2, green);
}

.bb2b{
    width: 100%;
    height: 100%;

    /* Gradient transitions often gradually change from one color to another. You can make the change a solid line like this: */

    /* linear-gradient(var(--first-color) 0%, var(--first-color) 40%, var(--second-color) 40%, var(--second-color) 80%); */

    /* background: linear-gradient(var(--building-color2), var(--building-color2) 6%, var(--window-color2) 6%, var(--window-color2) 9%); */


    /* 👆🏻 You can see the hard color change at the top of the section. */

    /* Change the gradient type from linear-gradient to repeating-linear-gradient for this section. This will make the four colors of your gradient repeat until it gets to the bottom of the element; giving you some stripes, and saving you from having to add a bunch of elements to create them. 👇🏻 */
    background: repeating-linear-gradient(var(--building-color2), var(--building-color2) 6%, var(--window-color2) 6%, var(--window-color2) 9%);
}

.bb3{
    width: 10%;
    height: 55%;
    background-color:  var(--building-color3, pink);
}

.bb4{
    width: 11%;
    height: 58%;
    background-color: var(--building-color4);
}

.foreground-buildings{
    width: 100%;
    height: 100%;
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;
}

/* FOREGROUND BUILDINGS - "fb" stands for "foreground building" */
.fb1{
    width: 10%;
    height: 60%;
    background-color: var(--building-color4);
}

.fb2{
    width: 10%;
    height: 40%;
    background-color: var(--building-color3);
}

.fb3{
    width: 10%;
    height: 35%;
    background-color: var(--building-color1);
}

.fb4{
    width: 8%;
    height: 45%;
    background-color: var(--building-color1);
    position: relative;
    left: 10%;
}

.fb5{
    width: 10%;
    height: 33%;
    background-color: var(--building-color2);
    position: relative;
    right: 10%;
}

.fb6{
    width: 9%;
    height: 38%;
    background-color: var(--building-color3);
}

